var app = angular.module('PM5', ['ngRoute', 'ngAnimate', 'ngResource', 'ui.bootstrap']);
angular.module('PM5')
.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider){
	$routeProvider
	.when('/', {
		templateUrl: '/templates/layout/home.html',
		controller: 'HomeController',
		controllerAs: 'home'
	})
	.when('/:slug', {
		templateUrl: '/templates/layout/category.html',
		controller: 'CategoryController',
		controllerAs: 'category'
	})
	.when('/:slug/:post_id', {
		templateUrl: '/templates/layout/post.html',
		controller: 'PostController',
		controllerAs: 'post'
	})
	.when('/404', {
		templateUrl: '/templates/error/404.html'
	})
}]);
angular.module('PM5')
.controller('CategoryController', ['$routeParams', function($routeParams){
	console.log($routeParams.slug);
}]);
angular.module('PM5')
.controller('HomeController', ['$scope','$routeParams','Home', function($scope, $routeParams, Home){
	Home.index({postType:"post", order: "date", orderDir:"DESC", maxResults:1}).$promise.then(function(q){
		console.log(q);
	}, function(q){
		console.log(q);
	});
}]);
angular.module('PM5')
.controller('LoginBarController', ['$scope', '$modal', function($scope, $modal){
	this.open = function(){
		var modalInstance = $modal.open({
			templateUrl: './templates/modals/box.html',
			controller: 'ModalInstanceController',
			controllerAs: 'modal'
		})
	}
}]);
angular.module('PM5')
.controller('MainController', ['$scope', '$route', '$routeParams', '$location', function($scope, $route, $routeParams, $location) {
	this.templates = {
		insiders: {
			login_bar: '/templates/insiders/login_bar.html'
		},
		navigation: {
			main_menu: '/templates/navigation/main_menu.html'
		},
		sections: {
			promo: '/templates/sections/promo.html'
		},
		components: {
			promo_slider: '/templates/components/promo_slider.html',
			twitter_box: '/templates/components/twitter_box.html'
		}
	}
	/*
		[	{ name: 'bitPM.html', url: './templates/bitPM.html'},
			{ name: 'blogger.html', url: './templates/blogger.html'},
			{ name: 'blogueroPM.html', url: './templates/blogueroPM.html'},
			{ name: 'editorial.html', url: './templates/editorial.html'},
			{ name: 'home.html', url: './templates/home.html'},
			{ name: 'playlist.html', url: './templates/playlist.html'},
			{ name: 'recentPost.html', url: './templates/recentPost.html'},
			{ name: 'singleArticulo.html', url: './templates/singleArticulo.html'},
			{ name: 'singleArticuloBlogeroPM.html', url: './templates/singleArticuloBlogeroPM.html'},
			{ name: 'singleArticuloBlogeroPM.html', url: './templates/singleArticuloBlogeroPM.html'},
			{ name: 'singleSpecialBitPM.html', url: './templates/singleSpecialBitPM.html'},
			{ name: 'singleVideo.html', url: './templates/singleVideo.html'}
		];
	*/
}])
angular.module('PM5')
.controller('ModalInstanceController', ['$scope', '$modalInstance', function($scope, $modalInstance){
	this.ok = function(){
		$modalInstance.close('close');
	}
	this.cancel = function(){
		$modalInstance.dismiss('cancel');
	}
}]);
angular.module('PM5')
.controller('PostController', ['$routeParams', function($routeParams){
	console.log($routeParams.slug, $routeParams.post_id)
}]);
angular.module('PM5')
.controller('PromoSliderController', ['$scope', function($scope){
	this.interval = 6000;
	this.slides = [
	{image: '/images/slider/01.jpg'},
	{image: '/images/slider/02.jpg'},
	{image: '/images/slider/03.jpg'},
	{image: '/images/slider/04.jpg'},
	{image: '/images/slider/05.jpg'}
	];
}]);
angular.module('PM5')
.factory('Home',['$resource', function($resource){
	return $resource('api/posts',{}, {
		index:{
			method:"GET",
			isArray: true
		}
	});
}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsInJvdXRlcy5qcyIsImNvbnRyb2xsZXJzL2NhdGVnb3J5LmN0cmwuanMiLCJjb250cm9sbGVycy9ob21lLmN0cmwuanMiLCJjb250cm9sbGVycy9sb2dpbl9iYXIuY3RybC5qcyIsImNvbnRyb2xsZXJzL21haW4uY3RybC5qcyIsImNvbnRyb2xsZXJzL21vZGFsX2luc3RhbmNlLmN0cmwuanMiLCJjb250cm9sbGVycy9wb3N0LmN0cmwuanMiLCJjb250cm9sbGVycy9wcm9tb19zbGlkZXIuY3RybC5qcyIsInNlcnZpY2VzL2hvbWUuc3ZjLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNyQkE7QUFDQTtBQUNBO0FBQ0E7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNoQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ1BNNScsIFsnbmdSb3V0ZScsICduZ0FuaW1hdGUnLCAnbmdSZXNvdXJjZScsICd1aS5ib290c3RyYXAnXSk7IiwiYW5ndWxhci5tb2R1bGUoJ1BNNScpXG4uY29uZmlnKFsnJHJvdXRlUHJvdmlkZXInLCAnJGxvY2F0aW9uUHJvdmlkZXInLCBmdW5jdGlvbigkcm91dGVQcm92aWRlciwgJGxvY2F0aW9uUHJvdmlkZXIpe1xuXHQkcm91dGVQcm92aWRlclxuXHQud2hlbignLycsIHtcblx0XHR0ZW1wbGF0ZVVybDogJy90ZW1wbGF0ZXMvbGF5b3V0L2hvbWUuaHRtbCcsXG5cdFx0Y29udHJvbGxlcjogJ0hvbWVDb250cm9sbGVyJyxcblx0XHRjb250cm9sbGVyQXM6ICdob21lJ1xuXHR9KVxuXHQud2hlbignLzpzbHVnJywge1xuXHRcdHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9sYXlvdXQvY2F0ZWdvcnkuaHRtbCcsXG5cdFx0Y29udHJvbGxlcjogJ0NhdGVnb3J5Q29udHJvbGxlcicsXG5cdFx0Y29udHJvbGxlckFzOiAnY2F0ZWdvcnknXG5cdH0pXG5cdC53aGVuKCcvOnNsdWcvOnBvc3RfaWQnLCB7XG5cdFx0dGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL2xheW91dC9wb3N0Lmh0bWwnLFxuXHRcdGNvbnRyb2xsZXI6ICdQb3N0Q29udHJvbGxlcicsXG5cdFx0Y29udHJvbGxlckFzOiAncG9zdCdcblx0fSlcblx0LndoZW4oJy80MDQnLCB7XG5cdFx0dGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL2Vycm9yLzQwNC5odG1sJ1xuXHR9KVxufV0pOyIsImFuZ3VsYXIubW9kdWxlKCdQTTUnKVxuLmNvbnRyb2xsZXIoJ0NhdGVnb3J5Q29udHJvbGxlcicsIFsnJHJvdXRlUGFyYW1zJywgZnVuY3Rpb24oJHJvdXRlUGFyYW1zKXtcblx0Y29uc29sZS5sb2coJHJvdXRlUGFyYW1zLnNsdWcpO1xufV0pOyIsImFuZ3VsYXIubW9kdWxlKCdQTTUnKVxuLmNvbnRyb2xsZXIoJ0hvbWVDb250cm9sbGVyJywgWyckc2NvcGUnLCckcm91dGVQYXJhbXMnLCdIb21lJywgZnVuY3Rpb24oJHNjb3BlLCAkcm91dGVQYXJhbXMsIEhvbWUpe1xuXHRIb21lLmluZGV4KHtwb3N0VHlwZTpcInBvc3RcIiwgb3JkZXI6IFwiZGF0ZVwiLCBvcmRlckRpcjpcIkRFU0NcIiwgbWF4UmVzdWx0czoxfSkuJHByb21pc2UudGhlbihmdW5jdGlvbihxKXtcblx0XHRjb25zb2xlLmxvZyhxKTtcblx0fSwgZnVuY3Rpb24ocSl7XG5cdFx0Y29uc29sZS5sb2cocSk7XG5cdH0pO1xufV0pOyIsImFuZ3VsYXIubW9kdWxlKCdQTTUnKVxuLmNvbnRyb2xsZXIoJ0xvZ2luQmFyQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRtb2RhbCcsIGZ1bmN0aW9uKCRzY29wZSwgJG1vZGFsKXtcblx0dGhpcy5vcGVuID0gZnVuY3Rpb24oKXtcblx0XHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHRcdHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvbW9kYWxzL2JveC5odG1sJyxcblx0XHRcdGNvbnRyb2xsZXI6ICdNb2RhbEluc3RhbmNlQ29udHJvbGxlcicsXG5cdFx0XHRjb250cm9sbGVyQXM6ICdtb2RhbCdcblx0XHR9KVxuXHR9XG59XSk7IiwiYW5ndWxhci5tb2R1bGUoJ1BNNScpXG4uY29udHJvbGxlcignTWFpbkNvbnRyb2xsZXInLCBbJyRzY29wZScsICckcm91dGUnLCAnJHJvdXRlUGFyYW1zJywgJyRsb2NhdGlvbicsIGZ1bmN0aW9uKCRzY29wZSwgJHJvdXRlLCAkcm91dGVQYXJhbXMsICRsb2NhdGlvbikge1xuXHR0aGlzLnRlbXBsYXRlcyA9IHtcblx0XHRpbnNpZGVyczoge1xuXHRcdFx0bG9naW5fYmFyOiAnL3RlbXBsYXRlcy9pbnNpZGVycy9sb2dpbl9iYXIuaHRtbCdcblx0XHR9LFxuXHRcdG5hdmlnYXRpb246IHtcblx0XHRcdG1haW5fbWVudTogJy90ZW1wbGF0ZXMvbmF2aWdhdGlvbi9tYWluX21lbnUuaHRtbCdcblx0XHR9LFxuXHRcdHNlY3Rpb25zOiB7XG5cdFx0XHRwcm9tbzogJy90ZW1wbGF0ZXMvc2VjdGlvbnMvcHJvbW8uaHRtbCdcblx0XHR9LFxuXHRcdGNvbXBvbmVudHM6IHtcblx0XHRcdHByb21vX3NsaWRlcjogJy90ZW1wbGF0ZXMvY29tcG9uZW50cy9wcm9tb19zbGlkZXIuaHRtbCcsXG5cdFx0XHR0d2l0dGVyX2JveDogJy90ZW1wbGF0ZXMvY29tcG9uZW50cy90d2l0dGVyX2JveC5odG1sJ1xuXHRcdH1cblx0fVxuXHQvKlxuXHRcdFtcdHsgbmFtZTogJ2JpdFBNLmh0bWwnLCB1cmw6ICcuL3RlbXBsYXRlcy9iaXRQTS5odG1sJ30sXG5cdFx0XHR7IG5hbWU6ICdibG9nZ2VyLmh0bWwnLCB1cmw6ICcuL3RlbXBsYXRlcy9ibG9nZ2VyLmh0bWwnfSxcblx0XHRcdHsgbmFtZTogJ2Jsb2d1ZXJvUE0uaHRtbCcsIHVybDogJy4vdGVtcGxhdGVzL2Jsb2d1ZXJvUE0uaHRtbCd9LFxuXHRcdFx0eyBuYW1lOiAnZWRpdG9yaWFsLmh0bWwnLCB1cmw6ICcuL3RlbXBsYXRlcy9lZGl0b3JpYWwuaHRtbCd9LFxuXHRcdFx0eyBuYW1lOiAnaG9tZS5odG1sJywgdXJsOiAnLi90ZW1wbGF0ZXMvaG9tZS5odG1sJ30sXG5cdFx0XHR7IG5hbWU6ICdwbGF5bGlzdC5odG1sJywgdXJsOiAnLi90ZW1wbGF0ZXMvcGxheWxpc3QuaHRtbCd9LFxuXHRcdFx0eyBuYW1lOiAncmVjZW50UG9zdC5odG1sJywgdXJsOiAnLi90ZW1wbGF0ZXMvcmVjZW50UG9zdC5odG1sJ30sXG5cdFx0XHR7IG5hbWU6ICdzaW5nbGVBcnRpY3Vsby5odG1sJywgdXJsOiAnLi90ZW1wbGF0ZXMvc2luZ2xlQXJ0aWN1bG8uaHRtbCd9LFxuXHRcdFx0eyBuYW1lOiAnc2luZ2xlQXJ0aWN1bG9CbG9nZXJvUE0uaHRtbCcsIHVybDogJy4vdGVtcGxhdGVzL3NpbmdsZUFydGljdWxvQmxvZ2Vyb1BNLmh0bWwnfSxcblx0XHRcdHsgbmFtZTogJ3NpbmdsZUFydGljdWxvQmxvZ2Vyb1BNLmh0bWwnLCB1cmw6ICcuL3RlbXBsYXRlcy9zaW5nbGVBcnRpY3Vsb0Jsb2dlcm9QTS5odG1sJ30sXG5cdFx0XHR7IG5hbWU6ICdzaW5nbGVTcGVjaWFsQml0UE0uaHRtbCcsIHVybDogJy4vdGVtcGxhdGVzL3NpbmdsZVNwZWNpYWxCaXRQTS5odG1sJ30sXG5cdFx0XHR7IG5hbWU6ICdzaW5nbGVWaWRlby5odG1sJywgdXJsOiAnLi90ZW1wbGF0ZXMvc2luZ2xlVmlkZW8uaHRtbCd9XG5cdFx0XTtcblx0Ki9cbn1dKSIsImFuZ3VsYXIubW9kdWxlKCdQTTUnKVxuLmNvbnRyb2xsZXIoJ01vZGFsSW5zdGFuY2VDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJG1vZGFsSW5zdGFuY2UnLCBmdW5jdGlvbigkc2NvcGUsICRtb2RhbEluc3RhbmNlKXtcblx0dGhpcy5vayA9IGZ1bmN0aW9uKCl7XG5cdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoJ2Nsb3NlJyk7XG5cdH1cblx0dGhpcy5jYW5jZWwgPSBmdW5jdGlvbigpe1xuXHRcdCRtb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuXHR9XG59XSk7IiwiYW5ndWxhci5tb2R1bGUoJ1BNNScpXG4uY29udHJvbGxlcignUG9zdENvbnRyb2xsZXInLCBbJyRyb3V0ZVBhcmFtcycsIGZ1bmN0aW9uKCRyb3V0ZVBhcmFtcyl7XG5cdGNvbnNvbGUubG9nKCRyb3V0ZVBhcmFtcy5zbHVnLCAkcm91dGVQYXJhbXMucG9zdF9pZClcbn1dKTsiLCJhbmd1bGFyLm1vZHVsZSgnUE01Jylcbi5jb250cm9sbGVyKCdQcm9tb1NsaWRlckNvbnRyb2xsZXInLCBbJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSl7XG5cdHRoaXMuaW50ZXJ2YWwgPSA2MDAwO1xuXHR0aGlzLnNsaWRlcyA9IFtcblx0e2ltYWdlOiAnL2ltYWdlcy9zbGlkZXIvMDEuanBnJ30sXG5cdHtpbWFnZTogJy9pbWFnZXMvc2xpZGVyLzAyLmpwZyd9LFxuXHR7aW1hZ2U6ICcvaW1hZ2VzL3NsaWRlci8wMy5qcGcnfSxcblx0e2ltYWdlOiAnL2ltYWdlcy9zbGlkZXIvMDQuanBnJ30sXG5cdHtpbWFnZTogJy9pbWFnZXMvc2xpZGVyLzA1LmpwZyd9XG5cdF07XG59XSk7IiwiYW5ndWxhci5tb2R1bGUoJ1BNNScpXG4uZmFjdG9yeSgnSG9tZScsWyckcmVzb3VyY2UnLCBmdW5jdGlvbigkcmVzb3VyY2Upe1xuXHRyZXR1cm4gJHJlc291cmNlKCdhcGkvcG9zdHMnLHt9LCB7XG5cdFx0aW5kZXg6e1xuXHRcdFx0bWV0aG9kOlwiR0VUXCIsXG5cdFx0XHRpc0FycmF5OiB0cnVlXG5cdFx0fVxuXHR9KTtcbn1dKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=